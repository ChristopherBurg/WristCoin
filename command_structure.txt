Communications between the Pebble and phone are handled by a series of command
messages.

Command messages take the form of a series of key/value pairs. The first
key/value pair is always 0 : int. 0 indicates that the message is a command and
the integer value tells what command is being issued. Depending on the command
value additional information may be included in the message.

Messages sent in reply to a command always start by including the same
key/value pair as the initial command. For example, if the Pebble sent 0:0 to
the phone the phone's response would start with 0:0 as well.

All command messages begin with the following:
-----------------------
|    0     |   int    |
-----------------------

A key value of 0 indicates that the message is a command. The integer value
tells the recipient what command is being issued.


-------------------------------------------------------------------------------
| 1. Commands                                                                 |
-------------------------------------------------------------------------------

-------------------------------------------------------------------------------
| 1.1 Configure Exchanges                                                     |
-------------------------------------------------------------------------------
| Initiated By: Pebble                                                        |
-------------------------------------------------------------------------------
| Command: 0                                                                  |
-------------------------------------------------------------------------------
| Response Type: One to Many                                                  |
-------------------------------------------------------------------------------

The initial command message is:
-----------------------
|    0     |    0     |
-----------------------
|  Config  |   int    |
-----------------------

When received by the phone it will push the appropriate configuration
information. The Config value is used to select the type of configuration
information to be sent. Response command message take the form of:

-----------------------
|    0     |    0     |
-----------------------
|  Config  |    0     |
-----------------------
|  Number  |   int    |
-----------------------

A Config value of 0 indicates that the returned records will be global
configuration information. Number is the number of exchanges that the user has
enabled.

-----------------------
|    0     |    0     |
-----------------------
|  Config  |    1     |
-----------------------
|  Index   |   int    |
-----------------------
|   Name   |  string  |
-----------------------
|  ValueA  |    1     |
-----------------------
|   ...    |    1     |
-----------------------
|  ValueZ  |    1     |
-----------------------

A Config value of 1 indicates that the returned records will be configuration
data for an exchange. Index is theexchange's index, or order in the array of all
indexes. Name is a string representation of the exchange ("Bitstamp", "BTC-e",
etc.). ValueA through ValueZ are the values that the exchange returns (high,
low, last, etc.).

-------------------------------------------------------------------------------
| 1.2 Fetch Prices                                                            |
-------------------------------------------------------------------------------
| Initiated By: Pebble                                                        |
-------------------------------------------------------------------------------
| Command: 1                                                                  |
-------------------------------------------------------------------------------
| Response Type: One to Many                                                  |
-------------------------------------------------------------------------------

This command tells the phone to fetch price information for every enabled
exchange. It exists primarily because the initial design of this application
assumed it would always fetch prices for every exchange. Since I don't feel
like rewriting a great deal of code right away I included this command to work
with existing code.

The initial command is:
-----------------------
|    0     |    1     |
-----------------------

Response command message take the form of:

-----------------------
|    0     |    1     |
-----------------------
| Exchange |   int    |
-----------------------
|  ValueA  |   int    |
-----------------------
|   ...    |   int    |
-----------------------
|  ValueZ  |   int    |
-----------------------

Exchange denotes the exchange the pricing information applies to. ValueA
through ValueZ are the prices (high, low, last, etc.) returned by the
exchange's API.

Note that int values returned for ValueA through ValueZ are usually 32-bit
integers. The exception to this rule are values that overflow 32-bit integers
(commonly values associated with trade volume), they are returned as byte
arrays.

-------------------------------------------------------------------------------
| 1.3 Fetch Price Information For Exchange                                    |
-------------------------------------------------------------------------------
| Initiated By: Pebble                                                        |
-------------------------------------------------------------------------------
| Command: 1                                                                  |
-------------------------------------------------------------------------------
| Response Type: One to One                                                   |
-------------------------------------------------------------------------------

This command differs only slightly from 1.2. Instead of fetching prices for all
exchanges this command only fetches the price information for a single
exchange. The initial command is:
-----------------------
|    0     |    1     |
-----------------------
| Exchange |   int    |
-----------------------

When received by the phone it fetches price information from the designated
exchange and returns it to the Pebble. Response command message take the form
of:

-----------------------
|    0     |    1     |
-----------------------
| Exchange |   int    |
-----------------------
|  ValueA  |   int    |
-----------------------
|   ...    |   int    |
-----------------------
|  ValueZ  |   int    |
-----------------------

Exchange denotes the exchange the pricing information applies to. ValueA
through ValueZ are the prices (high, low, last, etc.) returned by the
exchange's API.

Note that int values returned for ValueA through ValueZ are usually 32-bit
integers. The exception to this rule are values that overflow 32-bit integers
(commonly values associated with trade volume), they are returned as byte
arrays.

If an error occurs while fetching prices the returned command message is:
-----------------------
|    0     |    1     |
-----------------------
| Exchange |   int    |
-----------------------
|  Error   |   int    |
-----------------------

Exchange denotes the exchange that encountered the error. Error denotes the
type of error that was encountered.
